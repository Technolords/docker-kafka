<?xml version="1.0" encoding="UTF-8"?>
<project
		xmlns="http://maven.apache.org/POM/4.0.0"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
>
    <modelVersion>4.0.0</modelVersion>

    <groupId>net.technolords.docker</groupId>
    <artifactId>kafka</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>Technolords :: Docker :: Kafka</name>
    <description>
        A docker image for Kafka
    </description>
    <url>https://github.com/Technolords/docker-kafka</url>

    <!--+
        | Properties
        +-->
    <properties>
        <!--+
            | Project properties
            +-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!--+
            | Version properties
            +-->
        <version.health.check>1.0.0</version.health.check>
        <version.kafka>1.0.1</version.kafka>
        <version.maven.plugin.deploy>2.8.2</version.maven.plugin.deploy>
        <version.maven.plugin.docker>1.4.0</version.maven.plugin.docker>
        <version.maven.plugin.release>2.5.3</version.maven.plugin.release>
        <version.testng>6.14.2</version.testng>
        <version.yammer.core>2.2.0</version.yammer.core>
    </properties>

    <!--+
        | Source control management
        +-->
    <scm>
        <connection>scm:git:https://github.com/Technolords/docker-kafka</connection>
        <url>https://github.com/Technolords/docker-kafka/</url>
        <tag>HEAD</tag>
    </scm>

    <!--+
        | License information
        +-->
    <licenses>
        <license>
            <name>MIT License</name>
            <url>http://www.opensource.org/licenses/mit-license.php</url>
        </license>
    </licenses>

    <!--+
        | Developers information
        +-->
    <developers>
        <developer>
            <name>Mike Ahlers</name>
            <email>mike@technolords.net</email>
            <organization>Technolords</organization>
            <organizationUrl>https://www.technolords.net</organizationUrl>
        </developer>
    </developers>

    <!--+
        | Dependencies
        +-->
    <dependencies>
    </dependencies>

    <!--+
        | Build
        +-->
    <build>
        <!-- Allow placeholders in files in resources folder to be translated -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <defaultGoal>install</defaultGoal>

        <plugins>

            <plugin>
                <!-- Required to provide an alternative location (local deployment) -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${version.maven.plugin.deploy}</version>
                <configuration>
                    <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
                </configuration>
            </plugin>

            <plugin>
                <!-- Required to perform a release (Maven Central) -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>${version.maven.plugin.release}</version>
                <configuration>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <useReleaseProfile>false</useReleaseProfile>
                    <releaseProfiles>release</releaseProfiles>
                    <goals>deploy</goals>
                    <tagNameFormat>@{project.version}</tagNameFormat>
                </configuration>
            </plugin>

            <plugin>
                <!-- Required to build a Docker image (must be *after* share plugin) -->
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>${version.maven.plugin.docker}</version>
                <executions>
                    <execution>
                        <id>build-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skipPush>true</skipPush>
                    <repository>docker.io/technolords/kafka</repository>
                    <tag>${project.version}</tag>
                    <buildArgs>
                        <POM_VERSION>${project.version}</POM_VERSION>
                        <KAFKA_VERSION>${version.kafka}</KAFKA_VERSION>
                        <HEALTH_CHECK_VERSION>${version.health.check}</HEALTH_CHECK_VERSION>
                    </buildArgs>
                </configuration>
            </plugin>

        </plugins>

    </build>

    <profiles>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <!-- Push image to Docker -->
                        <groupId>com.spotify</groupId>
                        <artifactId>dockerfile-maven-plugin</artifactId>
                        <version>${version.maven.plugin.docker}</version>
                        <executions>
                            <execution>
                                <id>push-image</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>tag</goal>
                                    <goal>push</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <skipPush>false</skipPush>
                            <repository>docker.io/technolords/kafka</repository>
                            <tag>latest</tag>
                            <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
                            <buildArgs>
                                <POM_VERSION>${project.version}</POM_VERSION>
                                <KAFKA_VERSION>${version.kafka}</KAFKA_VERSION>
                                <HEALTH_CHECK_VERSION>${version.health.check}</HEALTH_CHECK_VERSION>
                            </buildArgs>
                        </configuration>
                    </plugin>

                </plugins>
            </build>
        </profile>

    </profiles>

    <distributionManagement>
        <repository>
            <id>internal.repo</id>
            <name>Temporary Staging Repository</name>
            <url>file://${project.build.directory}/mvn-repo</url>
        </repository>
    </distributionManagement>

</project>
